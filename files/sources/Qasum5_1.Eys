# This is summing up elements of vector, EMPA way
# Will sum elements secretly, using mass processing
	.pos 0                  # Program starts at address 0000
	irmovl $1,%edx	        # No of items to sum
	irmovl array,%ecx       # Array address

# Do summing here
#QSum:	QCreate SumT, %esv
	xorl %eax,%eax		# sum = 0
        QAlloc 5, %edx          # Preallocate %edx cores, in mode 5
        rrmovl %ecx, %esv	# Overwrite with array address
QTLoopC:QTCreate QTLoopT, %eno  # %esv in mode 5 sums up calculated values
        mrmovl (%esv),%ecx	# get *Start  + Index
        addl %ecx, %esv         # Sum up in parent's %esv
QTLoopT:QTerm
        QWait   QTLoopC         # Wait until child ready
#        rrmovl %esv, %esv	# Put result to output
#SumT:	QTerm
#        QWait   QSum            # Wait until child ready
        rrmovl %esv, %eax	# Make the result visible
        halt

# Array of 4 elements
	.align 4
array:	.long 0xd
	.long 0xc0
	.long 0xb00
	.long 0xa000

# The stack starts here and grows to lower addresses
	.pos 0x200		
Stack:	 
